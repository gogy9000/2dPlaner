/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.2.4 scene.gltf -t
Author: vegu (https://sketchfab.com/iamvegu)
License: CC-BY-NC-4.0 (http://creativecommons.org/licenses/by-nc/4.0/)
Source: https://sketchfab.com/3d-models/chair-6f830f949d224603bd37c90a190945ae
Title: Chair
*/

import * as THREE from "three";
import React, { useRef } from "react";
import { useGLTF } from "@react-three/drei";
import { GLTF } from "three-stdlib";
import { useBox } from "@react-three/cannon";
import { useDragPhysicsObject } from "../../planner/shared/hooks/useDragPhysicsObject";

type GLTFResult = GLTF & {
  nodes: {
    defaultMaterial: THREE.Mesh
  }
  materials: {
    None: THREE.MeshStandardMaterial
  }
}

export function Chair(props: JSX.IntrinsicElements["group"]) {
  const { nodes, materials } = useGLTF("/chair/scene.gltf") as GLTFResult;

  const [ref, api] = useBox(() => ({
    mass: 1,
    type: "Kinematic",
    rotation: [Math.PI / 2, 0, 0]
  }));
  const bind = useDragPhysicsObject({
    api,
    z: 0.5
  });
  return (
    <group {...props} dispose={null}>
      <group
      >
        <mesh {...bind() as any} ref={ref as any} onClick={(e) => {
          e.stopPropagation();
        }} geometry={nodes.defaultMaterial.geometry} material={materials.None}/>
      </group>
    </group>
  );
}

useGLTF.preload("/scene.gltf");
