/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.2.4 scene.gltf -t
Author: DailyArt (https://sketchfab.com/D.art)
License: CC-BY-NC-4.0 (http://creativecommons.org/licenses/by-nc/4.0/)
Source: https://sketchfab.com/3d-models/simple-dining-table-a6deba91a7f9435082369e33f8db0dd6
Title: Simple dining table
*/

import * as THREE from 'three'
import React from 'react'
import { useGLTF } from '@react-three/drei'
import { GLTF } from 'three-stdlib'
import { useBox } from "@react-three/cannon";
import { useDragPhysicsObject } from "../../planner/shared/hooks/useDragPhysicsObject";

type GLTFResult = GLTF & {
  nodes: {
    Object_6: THREE.Mesh
    Object_9: THREE.Mesh
    Object_12: THREE.Mesh
    Object_15: THREE.Mesh
    Object_18: THREE.Mesh
    Object_21: THREE.Mesh
    Object_24: THREE.Mesh
    Object_27: THREE.Mesh
  }
  materials: {
    qita: THREE.MeshStandardMaterial
    lvzhi: THREE.MeshStandardMaterial
    zhuoyi: THREE.MeshStandardMaterial
    material: THREE.MeshStandardMaterial
    boli: THREE.MeshStandardMaterial
    niunai: THREE.MeshStandardMaterial
  }
}

export function TableAndChairs(props: JSX.IntrinsicElements['group']) {
  const { nodes, materials } = useGLTF('tableAndChairs/scene.gltf') as GLTFResult
  const [ref, api] = useBox(() => ({
    mass: 0,
    type: "Static",
    rotation: [Math.PI / 2, 0, 0],

  }));
  const bind = useDragPhysicsObject({
    api,
    z: 0.5
  });
  const material=materials.zhuoyi
  // material.color=new THREE.Color("blue")

  return (
      <group  position={[0,0,0]}  scale={2} ref={ref as any} {...props} dispose={null} {...bind() as any}>
        <mesh   geometry={nodes.Object_12.geometry} material={material} />
      </group>
  )
}

useGLTF.preload('/scene.gltf')
